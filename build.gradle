plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.github.johnrengelman.processes' version '0.5.0'
    id 'org.springdoc.openapi-gradle-plugin' version '1.3.2'
}

group = 'com.example'
version = '0.0.1'
sourceCompatibility = '11'
targetCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = '1.4.2.Final'
    lombokMapstructBindingVersion = '0.2.0'
    tikaVersion = '1.27'
    bouncyCastleVersion = '1.69'
    hibernateTypesVersion = '2.12.1'
    springDocVersion = '1.5.9'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "org.bouncycastle:bcprov-jdk15on:$bouncyCastleVersion"
    implementation "com.vladmihalcea:hibernate-types-52:$hibernateTypesVersion"
    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    implementation 'org.projectlombok:lombok'
    implementation "org.apache.tika:tika-core:$tikaVersion"
    implementation "org.springdoc:springdoc-openapi-ui:$springDocVersion"
    implementation "org.springdoc:springdoc-openapi-security:$springDocVersion"
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:$lombokMapstructBindingVersion"
}

compileJava {
    options.compilerArgs.addAll([
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.unmappedTargetPolicy=IGNORE',
    ])
}

openApi {
    forkProperties = System.properties
    apiDocsUrl = 'http://localhost:8080/v3/api-docs.yaml'
    outputDir = file("$buildDir/docs")
    outputFileName = 'openapi.yaml'
}

test {
    useJUnitPlatform()
}
